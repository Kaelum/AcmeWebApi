<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ACME_Server" elementType="Argument">
            <stringProp name="Argument.name">ACME_Server</stringProp>
            <stringProp name="Argument.value">${__P(host)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ACME_Port" elementType="Argument">
            <stringProp name="Argument.name">ACME_Port</stringProp>
            <stringProp name="Argument.value">${__P(port)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="uid" elementType="Argument">
            <stringProp name="Argument.name">uid</stringProp>
            <stringProp name="Argument.value">001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="productid" elementType="Argument">
            <stringProp name="Argument.name">productid</stringProp>
            <stringProp name="Argument.value">device</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oemid" elementType="Argument">
            <stringProp name="Argument.name">oemid</stringProp>
            <stringProp name="Argument.value">oem</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="In 40M File" elementType="Argument">
            <stringProp name="Argument.name">In 40M File</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\Sample Data For Jmeter\in40.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Not in 40M File" elementType="Argument">
            <stringProp name="Argument.name">Not in 40M File</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\Sample Data For Jmeter\notin40.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Subdomains File" elementType="Argument">
            <stringProp name="Argument.name">Subdomains File</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\Sample Data For Jmeter\7subdomains.csv</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="1M File" elementType="Argument">
            <stringProp name="Argument.name">1M File</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\Sample Data For Jmeter\path_urls.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="In 40M File_Batch" elementType="Argument">
            <stringProp name="Argument.name">In 40M File_Batch</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\Sample Data For Jmeter\in40_batch.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Not in 40M File_Batch" elementType="Argument">
            <stringProp name="Argument.name">Not in 40M File_Batch</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\Sample Data For Jmeter\notin40_batch.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Subdomains URLs File_Batch" elementType="Argument">
            <stringProp name="Argument.name">Subdomains URLs File_Batch</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\Sample Data For Jmeter\7subdomains_batch.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="1M File_Batch" elementType="Argument">
            <stringProp name="Argument.name">1M File_Batch</stringProp>
            <stringProp name="Argument.value">C:\Users\Administrator\Desktop\Sample Data For Jmeter\path_urls_batch.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(threads)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(duration)}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="In 40M File" enabled="true">
          <stringProp name="delimiter">\n</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">${In 40M File}</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">in40</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Not in 40M File" enabled="true">
          <stringProp name="delimiter">\n</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">${Not in 40M File}</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">notin40</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <stringProp name="throughput">${__P(throughput)}</stringProp>
          <intProp name="calcMode">2</intProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ACME - uriinfo - URL in 40M w/ 1 path &amp; query string" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?Acme version=acme/1.1?&gt;&#xd;
&lt;acme&gt;&#xd;
    &lt;seqnum&gt;493476&lt;/seqnum&gt;&#xd;
    &lt;request&gt;&#xd;
        &lt;method&gt;uriinfo&lt;/method&gt;&#xd;
        &lt;uid&gt;${uid}&lt;/uid&gt;&#xd;
        &lt;productid&gt;${productid}&lt;/productid&gt;&#xd;
        &lt;oemid&gt;${oemid}&lt;/oemid&gt;&#xd;
        &lt;uri&gt;${in40}/${__RandomString(12,abcdefghijklmnopqrstuvwxyz,)}?${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}&lt;/uri&gt;&#xd;
    &lt;/request&gt;&#xd;
&lt;/acme&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(host)}</stringProp>
          <stringProp name="HTTPSampler.port">${ACME_Port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
